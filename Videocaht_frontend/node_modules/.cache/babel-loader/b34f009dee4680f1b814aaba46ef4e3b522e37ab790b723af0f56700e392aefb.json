{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xC1n 1\\\\New folder\\\\Discord-clone\\\\discord-frontend\\\\src\\\\Dashboard\\\\Messenger\\\\Messages\\\\Messages.jsx\";\n// import React, { userRef, useEffect } from \"react\";\nimport { styled } from \"@mui/system\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport { connect } from \"react-redux\";\n// import DUMMY_MESSAGES from \"./DUMMY_MESSAGES\";\nimport Message from \"./Message\";\nimport DateSeparator from \"./DateSeparator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled(\"div\")({\n  height: \"calc(100% - 60px)\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n});\n_c = MainContainer;\nconst convertDateToHumanReadable = (date, format) => {\n  const map = {\n    mm: date.getMonth() + 1,\n    dd: date.getDate(),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear()\n  };\n  return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched]);\n};\nconst Messages = _ref => {\n  let {\n    chosenChatDetails,\n    messages\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MessagesHeader, {\n      name: chosenChatDetails === null || chosenChatDetails === void 0 ? void 0 : chosenChatDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), messages.map((message, index) => {\n      const sameAuthor = index > 0 && messages[index].author._id === messages[index - 1].author._id;\n      const sameDay = index > 0 && convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\") === convertDateToHumanReadable(new Date(messages[index - 1].date), \"dd/mm/yy\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"97%\"\n        },\n        children: [(!sameDay || index === 0) && /*#__PURE__*/_jsxDEV(DateSeparator, {\n          date: convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          content: message.content,\n          username: message.author.username,\n          sameAuthor: sameAuthor,\n          date: convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\"),\n          sameDay: sameDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Messages;\nconst mapStoreStateToProps = _ref2 => {\n  let {\n    chat\n  } = _ref2;\n  return {\n    ...chat\n  };\n};\nexport default connect(mapStoreStateToProps)(Messages);\nvar _c, _c2;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Messages\");","map":{"version":3,"names":["styled","MessagesHeader","connect","Message","DateSeparator","jsxDEV","_jsxDEV","MainContainer","height","overflow","display","flexDirection","alignItems","_c","convertDateToHumanReadable","date","format","map","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","replace","matched","Messages","_ref","chosenChatDetails","messages","children","name","fileName","_jsxFileName","lineNumber","columnNumber","message","index","sameAuthor","author","_id","sameDay","Date","style","width","content","username","_c2","mapStoreStateToProps","_ref2","chat","$RefreshReg$"],"sources":["D:/Đồ Án 1/New folder/Discord-clone/discord-frontend/src/Dashboard/Messenger/Messages/Messages.jsx"],"sourcesContent":["// import React, { userRef, useEffect } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport { connect } from \"react-redux\";\r\n// import DUMMY_MESSAGES from \"./DUMMY_MESSAGES\";\r\nimport Message from \"./Message\";\r\nimport DateSeparator from \"./DateSeparator\";\r\n\r\nconst MainContainer = styled(\"div\")({\r\n  height: \"calc(100% - 60px)\",\r\n  overflow: \"auto\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst convertDateToHumanReadable = (date, format) => {\r\n  const map = {\r\n    mm: date.getMonth() + 1,\r\n    dd: date.getDate(),\r\n    yy: date.getFullYear().toString().slice(-2),\r\n    yyyy: date.getFullYear(),\r\n  };\r\n\r\n  return format.replace(/mm|dd|yy|yyy/gi, (matched) => map[matched]);\r\n};\r\n\r\nconst Messages = ({ chosenChatDetails, messages }) => {\r\n  return (\r\n    <MainContainer>\r\n      <MessagesHeader name={chosenChatDetails?.name} />\r\n      {messages.map((message, index) => {\r\n        const sameAuthor =\r\n          index > 0 &&\r\n          messages[index].author._id === messages[index - 1].author._id;\r\n\r\n        const sameDay =\r\n          index > 0 &&\r\n          convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\") ===\r\n            convertDateToHumanReadable(\r\n              new Date(messages[index - 1].date),\r\n              \"dd/mm/yy\"\r\n            );\r\n\r\n        return (\r\n          <div key={message._id} style={{ width: \"97%\" }}>\r\n            {(!sameDay || index === 0) && (\r\n              <DateSeparator\r\n                date={convertDateToHumanReadable(\r\n                  new Date(message.date),\r\n                  \"dd/mm/yy\"\r\n                )}\r\n              />\r\n            )}\r\n            <Message\r\n              content={message.content}\r\n              username={message.author.username}\r\n              sameAuthor={sameAuthor}\r\n              date={convertDateToHumanReadable(\r\n                new Date(message.date),\r\n                \"dd/mm/yy\"\r\n              )}\r\n              sameDay={sameDay}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ chat }) => {\r\n  return {\r\n    ...chat,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(Messages);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}