{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xC1n 1\\\\New folder\\\\Discord-clone\\\\discord-frontend\\\\src\\\\Dashboard\\\\Room\\\\RoomButtons\\\\ScreenShareButton.jsx\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  audio: false,\n  video: true\n};\nconst ScreenShareButton = _ref => {\n  let {\n    localStream,\n    screenSharingStream,\n    setScreenSharingStream,\n    isScreenSharingActive\n  } = _ref;\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\"error occured when trying to get an access to screen share stream\");\n      }\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.switchOutgoingTracks(stream);\n      }\n    } else {\n      webRTCHandler.switchOutgoingTracks(localStream);\n      screenSharingStream.getTracks().forEach(t => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleScreenShareToggle,\n    style: {\n      color: \"white\"\n    },\n    children: isScreenSharingActive ? /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ScreenShareButton;\nexport default ScreenShareButton;\nvar _c;\n$RefreshReg$(_c, \"ScreenShareButton\");","map":{"version":3,"names":["IconButton","ScreenShareIcon","StopScreenShareIcon","webRTCHandler","jsxDEV","_jsxDEV","constraints","audio","video","ScreenShareButton","_ref","localStream","screenSharingStream","setScreenSharingStream","isScreenSharingActive","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","err","console","log","switchOutgoingTracks","getTracks","forEach","t","stop","onClick","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Đồ Án 1/New folder/Discord-clone/discord-frontend/src/Dashboard/Room/RoomButtons/ScreenShareButton.jsx"],"sourcesContent":["import IconButton from \"@mui/material/IconButton\";\r\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\r\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\r\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst ScreenShareButton = ({\r\n  localStream,\r\n  screenSharingStream,\r\n  setScreenSharingStream,\r\n  isScreenSharingActive,\r\n}) => {\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occured when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n        webRTCHandler.switchOutgoingTracks(stream);\r\n      }\r\n    } else {\r\n      webRTCHandler.switchOutgoingTracks(localStream);\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton onClick={handleScreenShareToggle} style={{ color: \"white\" }}>\r\n      {isScreenSharingActive ? <StopScreenShareIcon /> : <ScreenShareIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ScreenShareButton;\r\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAO,KAAKC,aAAa,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,iBAAiB,GAAGC,IAAA,IAKpB;EAAA,IALqB;IACzBC,WAAW;IACXC,mBAAmB;IACnBC,sBAAsB;IACtBC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACD,qBAAqB,EAAE;MAC1B,IAAIE,MAAM,GAAG,IAAI;MACjB,IAAI;QACFA,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,eAAe,CAACb,WAAW,CAAC;MACpE,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CACT,mEAAmE,CACpE;MACH;MAEA,IAAIN,MAAM,EAAE;QACVH,sBAAsB,CAACG,MAAM,CAAC;QAC9Bb,aAAa,CAACoB,oBAAoB,CAACP,MAAM,CAAC;MAC5C;IACF,CAAC,MAAM;MACLb,aAAa,CAACoB,oBAAoB,CAACZ,WAAW,CAAC;MAC/CC,mBAAmB,CAACY,SAAS,EAAE,CAACC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC;MACxDd,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC;EAED,oBACER,OAAA,CAACL,UAAU;IAAC4B,OAAO,EAAEb,uBAAwB;IAACc,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,EACrEjB,qBAAqB,gBAAGT,OAAA,CAACH,mBAAmB;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAG9B,OAAA,CAACJ,eAAe;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEjB,CAAC;AAACC,EAAA,GAjCI3B,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}