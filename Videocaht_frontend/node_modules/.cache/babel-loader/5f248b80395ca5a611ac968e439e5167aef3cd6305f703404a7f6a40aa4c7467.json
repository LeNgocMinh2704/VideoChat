{"ast":null,"code":"import store from \"../../app/store\";\nimport { setMessages } from \"../../app/actions/chatActions\";\nexport const updateDirectChatHistoryIfActive = data => {\n  var _store$getState$chat$;\n  const {\n    participants,\n    messages\n  } = data;\n\n  // find id of user from token and id from active conversation\n  const receiverId = (_store$getState$chat$ = store.getState().chat.chosenChatDetails) === null || _store$getState$chat$ === void 0 ? void 0 : _store$getState$chat$.id;\n  const userId = store.getState().auth.userDetails._id;\n  if (receiverId && userId) {\n    const usersInCoversation = [receiverId, userId];\n    console.log(\"recevied participants\");\n    updateChatHistoryIfSameConversationActive({\n      participants,\n      usersInCoversation,\n      messages\n    });\n  }\n};\nconst updateChatHistoryIfSameConversationActive = _ref => {\n  let {\n    participants,\n    usersInCoversation,\n    messages\n  } = _ref;\n  const result = participants.every(function (participantId) {\n    return usersInCoversation.includes(participantId);\n  });\n  if (result) {\n    store.dispatch(setMessages(messages));\n  }\n};","map":{"version":3,"names":["store","setMessages","updateDirectChatHistoryIfActive","data","_store$getState$chat$","participants","messages","receiverId","getState","chat","chosenChatDetails","id","userId","auth","userDetails","_id","usersInCoversation","console","log","updateChatHistoryIfSameConversationActive","_ref","result","every","participantId","includes","dispatch"],"sources":["D:/Đồ Án 1/New folder/Discord-clone/discord-frontend/src/shared/utils/chat.js"],"sourcesContent":["import store from \"../../app/store\";\r\nimport { setMessages } from \"../../app/actions/chatActions\";\r\n\r\nexport const updateDirectChatHistoryIfActive = (data) => {\r\n  const { participants, messages } = data;\r\n\r\n  // find id of user from token and id from active conversation\r\n  const receiverId = store.getState().chat.chosenChatDetails?.id;\r\n  const userId = store.getState().auth.userDetails._id;\r\n\r\n  if (receiverId && userId) {\r\n    const usersInCoversation = [receiverId, userId];\r\n\r\n    console.log(\"recevied participants\");\r\n    updateChatHistoryIfSameConversationActive({\r\n      participants,\r\n      usersInCoversation,\r\n      messages,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateChatHistoryIfSameConversationActive = ({\r\n  participants,\r\n  usersInCoversation,\r\n  messages,\r\n}) => {\r\n  const result = participants.every(function (participantId) {\r\n    return usersInCoversation.includes(participantId);\r\n  });\r\n  if (result) {\r\n    store.dispatch(setMessages(messages));\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,SAASC,WAAW,QAAQ,+BAA+B;AAE3D,OAAO,MAAMC,+BAA+B,GAAIC,IAAI,IAAK;EAAA,IAAAC,qBAAA;EACvD,MAAM;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGH,IAAI;;EAEvC;EACA,MAAMI,UAAU,IAAAH,qBAAA,GAAGJ,KAAK,CAACQ,QAAQ,EAAE,CAACC,IAAI,CAACC,iBAAiB,cAAAN,qBAAA,uBAAvCA,qBAAA,CAAyCO,EAAE;EAC9D,MAAMC,MAAM,GAAGZ,KAAK,CAACQ,QAAQ,EAAE,CAACK,IAAI,CAACC,WAAW,CAACC,GAAG;EAEpD,IAAIR,UAAU,IAAIK,MAAM,EAAE;IACxB,MAAMI,kBAAkB,GAAG,CAACT,UAAU,EAAEK,MAAM,CAAC;IAE/CK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCC,yCAAyC,CAAC;MACxCd,YAAY;MACZW,kBAAkB;MAClBV;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,MAAMa,yCAAyC,GAAGC,IAAA,IAI5C;EAAA,IAJ6C;IACjDf,YAAY;IACZW,kBAAkB;IAClBV;EACF,CAAC,GAAAc,IAAA;EACC,MAAMC,MAAM,GAAGhB,YAAY,CAACiB,KAAK,CAAC,UAAUC,aAAa,EAAE;IACzD,OAAOP,kBAAkB,CAACQ,QAAQ,CAACD,aAAa,CAAC;EACnD,CAAC,CAAC;EACF,IAAIF,MAAM,EAAE;IACVrB,KAAK,CAACyB,QAAQ,CAACxB,WAAW,CAACK,QAAQ,CAAC,CAAC;EACvC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}